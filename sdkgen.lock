{"sdkfabric/discord":{"baseUrl":"https://discord.com/api/v10","security":{"type":"oauth2","tokenUrl":"https://discord.com/api/oauth2/token","authorizationUrl":"https://discord.com/oauth2/authorize","scopes":[]},"operations":{"channel.getPins":{"path":"/channels/:channel_id/pins","method":"GET","return":{"code":200,"schema":{"type":"array","items":{"$ref":"Message"}}},"arguments":{"channel_id":{"in":"path","schema":{"type":"string"}}},"throws":[],"description":"Returns all pinned messages in the channel as an array of message objects.","stability":1,"security":[],"authorization":true,"tags":[]},"channel.message.getAll":{"path":"/channels/:channel_id/messages","method":"GET","return":{"code":200,"schema":{"type":"array","items":{"$ref":"Message"}}},"arguments":{"channel_id":{"in":"path","schema":{"type":"string"}},"around":{"in":"query","schema":{"type":"string"}},"before":{"in":"query","schema":{"type":"string"}},"after":{"in":"query","schema":{"type":"string"}},"limit":{"in":"query","schema":{"type":"integer"}}},"throws":[],"description":"Retrieves the messages in a channel.","stability":1,"security":[],"authorization":true,"tags":[]},"channel.message.get":{"path":"/channels/:channel_id/messages/:message_id","method":"GET","return":{"code":200,"schema":{"$ref":"Message"}},"arguments":{"channel_id":{"in":"path","schema":{"type":"string"}},"message_id":{"in":"path","schema":{"type":"string"}}},"throws":[],"description":"Retrieves a specific message in the channel. Returns a message object on success.","stability":1,"security":[],"authorization":true,"tags":[]},"channel.message.create":{"path":"/channels/:channel_id/messages","method":"POST","return":{"code":200,"schema":{"$ref":"Message"}},"arguments":{"channel_id":{"in":"path","schema":{"type":"string"}},"payload":{"in":"body","schema":{"$ref":"Message"}}},"throws":[],"description":"Post a message to a guild text or DM channel. Returns a message object. Fires a Message Create Gateway event. See message formatting for more information on how to properly format messages.","stability":1,"security":[],"authorization":true,"tags":[]},"channel.message.update":{"path":"/channels/:channel_id/messages/:message_id","method":"PATCH","return":{"code":200,"schema":{"$ref":"Message"}},"arguments":{"channel_id":{"in":"path","schema":{"type":"string"}},"message_id":{"in":"path","schema":{"type":"string"}},"payload":{"in":"body","schema":{"$ref":"Message"}}},"throws":[],"description":"Edit a previously sent message. The fields content, embeds, and flags can be edited by the original message author. Other users can only edit flags and only if they have the MANAGE_MESSAGES permission in the corresponding channel. When specifying flags, ensure to include all previously set flags/bits in addition to ones that you are modifying. Only flags documented in the table below may be modified by users (unsupported flag changes are currently ignored without error).","stability":1,"security":[],"authorization":true,"tags":[]},"channel.message.remove":{"path":"/channels/:channel_id/messages/:message_id","method":"DELETE","return":{"code":204,"schema":{"type":"any"}},"arguments":{"channel_id":{"in":"path","schema":{"type":"string"}},"message_id":{"in":"path","schema":{"type":"string"}}},"throws":[],"description":"Delete a message. If operating on a guild channel and trying to delete a message that was not sent by the current user, this endpoint requires the MANAGE_MESSAGES permission.","stability":1,"security":[],"authorization":true,"tags":[]},"channel.message.crosspost":{"path":"/channels/:channel_id/messages/:message_id/crosspost","method":"POST","return":{"code":200,"schema":{"$ref":"Message"}},"arguments":{"channel_id":{"in":"path","schema":{"type":"string"}},"message_id":{"in":"path","schema":{"type":"string"}}},"throws":[],"description":"Crosspost a message in an Announcement Channel to following channels. This endpoint requires the SEND_MESSAGES permission, if the current user sent the message, or additionally the MANAGE_MESSAGES permission, for all other messages, to be present for the current user.","stability":1,"security":[],"authorization":true,"tags":[]}},"definitions":{"Channel":{"description":"","type":"object","properties":{"id":{"description":"","type":"string"},"type":{"description":"","type":"integer"},"guild_id":{"description":"","type":"string"},"position":{"description":"","type":"integer"},"name":{"description":"","type":"string"},"topic":{"description":"","type":"string"},"nsfw":{"description":"","type":"boolean"},"last_message_id":{"description":"","type":"string"},"bitrate":{"description":"","type":"integer"},"user_limit":{"description":"","type":"integer"},"rate_limit_per_user":{"description":"","type":"integer"},"icon":{"description":"","type":"string"},"owner_id":{"description":"","type":"string"},"application_id":{"description":"","type":"string"},"managed":{"description":"","type":"boolean"},"parent_id":{"description":"","type":"string"},"last_pin_timestamp":{"description":"","type":"string"},"rtc_region":{"description":"","type":"string"},"video_quality_mode":{"description":"","type":"integer"},"message_count":{"description":"","type":"integer"},"member_count":{"description":"","type":"integer"},"default_auto_archive_duration":{"description":"","type":"integer"},"permissions":{"description":"","type":"string"},"flags":{"description":"","type":"integer"},"total_message_sent":{"description":"","type":"integer"},"default_sort_order":{"description":"","type":"integer"},"default_forum_layout":{"description":"","type":"integer"}}},"Message":{"description":"","type":"object","properties":{"content":{"description":"Message contents (up to 2000 characters)","type":"string"},"nonce":{"description":"Can be used to verify a message was sent (up to 25 characters)","type":"string"},"tts":{"description":"true if this is a TTS message","type":"boolean"},"embeds":{"description":"Up to 10 rich embeds (up to 6000 characters)","type":"array","items":{"$ref":"Message_Embed"}},"allowed_mentions":{"description":"","$ref":"Message_Allowed_Mentions"},"message_reference":{"description":"","type":"string"},"flags":{"description":"","type":"integer"},"enforce_nonce":{"description":"","type":"boolean"}}},"Message_Allowed_Mentions":{"description":"","type":"object","properties":{"parse":{"description":"An array of allowed mention types to parse from the content","type":"array","items":{"type":"string"}},"roles":{"description":"Array of role_ids to mention (Max size of 100)","type":"array","items":{"type":"string"}},"users":{"description":"Array of user_ids to mention (Max size of 100)","type":"array","items":{"type":"string"}},"replied_user":{"description":"For replies, whether to mention the author of the message being replied to (default false)","type":"boolean"}}},"Message_Embed":{"description":"","type":"object","properties":{"title":{"description":"Title of embed","type":"string"},"type":{"description":"Type of embed (always \"rich\" for webhook embeds)","type":"string"},"description":{"description":"Description of embed","type":"string"},"url":{"description":"Url of embed","type":"string"},"timestamp":{"description":"Timestamp of embed content","type":"string"},"color":{"description":"Color code of the embed","type":"integer"}}},"Message_Reference":{"description":"","type":"object","properties":{"message_id":{"description":"Id of the originating message","type":"string"},"channel_id":{"description":"Id of the originating message's channel","type":"string"},"guild_id":{"description":"Id of the originating message's guild","type":"string"},"fail_if_not_exists":{"description":"When sending, whether to error if the referenced message doesn't exist instead of sending as a normal (non-reply) message, default true","type":"boolean"}}}}}}